@page "/register"
@using BlazorBattle.Shared
@using BlazorBattle.Client.Service
@inject IUnitService UnitService
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IToastService ToastService

<h3>Register</h3>

<EditForm Model="@user" OnValidSubmit="HandlerRegister">
    <DataAnnotationsValidator />
        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.Email)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="username">Email</label>
            <InputText id="username" @bind-Value="user.UserName" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.UserName)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.Password)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="confirmPassword">ConfirmPassword</label>
            <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" type="password" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.ConfirmPassword)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="bio">Bio</label>
            <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control"></InputTextArea>
        </div>
        <div class="form-group">
            <label for="bananas">Bananas</label>
            <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control"></InputNumber>
            <ValidationMessage For="@(() => user.Bananas)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="startUnits">Start Units</label>
            <InputSelect id="startUnits" @bind-Value="user.StartUnitId" class="form-control">
                @foreach (var unit in UnitService.Units)
                {
                    <option value="@unit.Id.ToString()">@unit.Title</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="dateOfBirth">Date Of Birth</label>
            <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"></InputDate>
        </div>
        <div class="form-check">
            <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input"></InputCheckbox>
            <label for="confirmed">Confirmed</label>
            <ValidationMessage For="@(() => user.IsConfirmed)"></ValidationMessage>
        </div>
        <button type="submit" class="btn btn-primary">Register</button>
</EditForm>


@code {
    UserRegister user = new UserRegister();

    async void HandlerRegister()
    {
        var response = await AuthService.Register(user);
        if (response.Success)
        {
            ToastService.ShowSuccess(response.Message);
            NavigationManager.NavigateTo("login");
        }
        else
        {
            ToastService.ShowError(response.Message);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
    }
}